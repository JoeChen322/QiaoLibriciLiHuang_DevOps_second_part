name: Build and Run Singularity Container with SSH Upload & Test Log

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-run:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Checkout code with submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Show submodule status
      run: git submodule status

    - name: Install dependencies for Singularity
      run: |
        sudo apt-get update && sudo apt-get install -y \
          uuid-dev \
          build-essential \
          libseccomp-dev \
          pkg-config \
          squashfs-tools \
          cryptsetup \
          curl wget git sshpass dos2unix

    - name: Install Go
      run: |
        export GOVERSION=1.17.3 OS=linux ARCH=amd64
        wget -O /tmp/go${GOVERSION}.${OS}-${ARCH}.tar.gz \
          https://dl.google.com/go/go${GOVERSION}.${OS}-${ARCH}.tar.gz
        sudo tar -C /usr/local -xzf /tmp/go${GOVERSION}.${OS}-${ARCH}.tar.gz
        echo "/usr/local/go/bin" >> $GITHUB_PATH

    - name: Install Singularity
      run: |
        export VERSION=3.8.7
        wget https://github.com/hpcng/singularity/releases/download/v${VERSION}/singularity-${VERSION}.tar.gz
        tar -xzf singularity-${VERSION}.tar.gz
        cd singularity-${VERSION}
        ./mconfig && make -C builddir && sudo make -C builddir install

    - name: Verify Singularity version
      run: singularity --version

    - name: Build Singularity Image
      run: sudo singularity build grayscale.sif Singularity.def

    - name: Run Application in Singularity
      run: |
        singularity run grayscale.sif input output Average

    - name: Run Unit Tests and Capture Output
      run: |
        ./build.sh
        ./build/test_grayscale > test_output.txt || true

    - name: Upload output images
      uses: actions/upload-artifact@v4
      with:
        name: pgm-results
        path: output/

    - name: Upload grayscale.sif
      uses: actions/upload-artifact@v4
      with:
        name: grayscale-sif
        path: grayscale.sif

    - name: Upload test output log
      uses: actions/upload-artifact@v4
      with:
        name: test-log
        path: test_output.txt

    - name: Convert job.sh to UNIX line endings
      run: dos2unix job.sh || true

    - name: Remove old host key and add new
      run: |
        mkdir -p ~/.ssh
        touch ~/.ssh/known_hosts
        ssh-keygen -R ${{ secrets.SLURM_HOST }} || true
        ssh-keyscan -H ${{ secrets.SLURM_HOST }} >> ~/.ssh/known_hosts

    - name: Transfer job script and sif file to cluster via scp
      env:
        SLURM_USER: ${{ secrets.SLURM_USER }}
        SLURM_HOST: ${{ secrets.SLURM_HOST }}
        SLURM_PASSWORD: ${{ secrets.SLURM_PASSWORD }}
      run: |
        sshpass -p "$SLURM_PASSWORD" scp \
          -o UserKnownHostsFile=/dev/null \
          -o StrictHostKeyChecking=no \
          -o PubkeyAuthentication=no \
          grayscale.sif job.sh $SLURM_USER@$SLURM_HOST:~/seproject/

    - name: Submit job to cluster via SSH
      env:
        SLURM_USER: ${{ secrets.SLURM_USER }}
        SLURM_HOST: ${{ secrets.SLURM_HOST }}
        SLURM_PASSWORD: ${{ secrets.SLURM_PASSWORD }}
      run: |
        sshpass -p "$SLURM_PASSWORD" ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $SLURM_USER@$SLURM_HOST \
          "cd ~/seproject && sbatch job.sh"
