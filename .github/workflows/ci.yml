name: Remote Build Singularity Container and Submit to SLURM

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies like MPI And sshpass
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          mpich \
          libmpich-dev \
          tzdata \
          build-essential \
          uuid-dev \
          libgpgme11-dev \
          squashfs-tools \
          libseccomp-dev \
          wget \
          pkg-config \
          git \
          cryptsetup \
          sshpass
          
    - name: install dependencies for Singularity 
      run: |
        sudo apt-get install -y \
          uuid-dev \
          build-essential \
          libseccomp-dev \
          pkg-config \
          squashfs-tools \
          cryptsetup \
          curl wget git
          
    - name: Initialize and update Google test submodules
      run: git submodule update --init --recursive

    - name: Setup CMake
      uses: jwlawson/actions-setup-cmake@v1

    - name: Configure CMake
      run: cmake -S . -B build

    - name: Build
      run: cmake --build build

    - name: Install Go
      run: |
        wget https://golang.org/dl/go1.20.3.linux-amd64.tar.gz
        sudo tar -C /usr/local -xzf go1.20.3.linux-amd64.tar.gz
        echo "/usr/local/go/bin" | sudo tee -a /etc/environment > /dev/null
        echo "PATH=$PATH:/usr/local/go/bin" >> $GITHUB_ENV
    - name : setup Env for GO
      run: echo 'export PATH=$PATH:/usr/local/go/bin' >> ~/.bashrc && source ~/.bashrc
      
    - name: Install Singularity
      run: |
        export VERSION=3.8.7 && # adjust this as necessary \
        wget https://github.com/hpcng/singularity/releases/download/v${VERSION}/singularity-${VERSION}.tar.gz \
        && sudo tar -xzf singularity-${VERSION}.tar.gz \
        && cd singularity-${VERSION} \
        && sudo ./mconfig \
        && sudo make -C builddir \
        && sudo make -C builddir install
        
    - name: Build Singularity Image
      run: sudo singularity build grayscale.sif Singularity.def

    - name: Run Application in Singularity
      run: singularity run grayscale.sif input output Average

    - name: Upload output images
      uses: actions/upload-artifact@v4
      with:
        name: pgm-results
        path: output/

    - name: Upload grayscale.sif
      uses: actions/upload-artifact@v4
      with:
        name: grayscale-sif
        path: grayscale.sif

    - name: Remove old host-key And Add new host-key to known_hosts
      run: |
        mkdir -p ~/.ssh
        touch ~/.ssh/known_hosts
        ssh-keygen -R login.g100.cineca.it
        ssh-keyscan -H login.g100.cineca.it >> ~/.ssh/known_hosts

    - name: Transfer job script and sif file to cluster via scp
      env:
        SLURM_USER: ${{ secrets.SLURM_USER }}
        SLURM_HOST: ${{ secrets.SLURM_HOST }}
        SLURM_PASSWORD: ${{ secrets.SLURM_PASSWORD }}
      run: |
        sshpass -p "${{ secrets.SLURM_PASSWORD }}" scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no grayscale.sif ${{ secrets.SLURM_USER }}@${{ secrets.SLURM_HOST }}:~/seproject
        sshpass -p "${{ secrets.SLURM_PASSWORD }}" scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no job_script.slurm ${{ secrets.SLURM_USER }}@${{ secrets.SLURM_HOST }}:~/seproject

    - name: Submit job to cluster via ssh
      env:
        SLURM_USER: ${{ secrets.SLURM_USER }}
        SLURM_HOST: ${{ secrets.SLURM_HOST }}
        SLURM_PASSWORD: ${{ secrets.SLURM_PASSWORD }}
      run: |
        sshpass -p "${{ secrets.SLURM_PASSWORD }}" ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ${{ secrets.SLURM_USER }}@${{ secrets.SLURM_HOST }} "cd ~/seproject && dos2unix job_script.slurm && sbatch job_script.slurm"
